<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <title>All Togheter Demo</title>
  <link rel="stylesheet" type="text/css" href="../../ext-2.0.1/resources/css/ext-all.css" />
  <link rel="stylesheet" type="text/css" href="../resources/cherryonext.css" />
  <script type="text/javascript" src="../../ext-2.0.1/source/core/Ext.js"></script>
  <script type="text/javascript" src="../../ext-2.0.1/source/adapter/ext-base.js"></script>
  <script type="text/javascript" src="../../ext-2.0.1/ext-all-debug.js"></script>
  <script type="text/javascript" src="../cherryonext-debug.js"></script>
  
  <script type="text/javascript" src="mydata.js"></script>
  
  <!--Ajax call simulation-->
  <script language="JavaScript" type="text/javascript" src="jsUnitAjax.js"></script>
  <script language="JavaScript" type="text/javascript" src="simulateAjaxCall.js"></script>
  <!--End ajax call simulation-->

  <script language="JavaScript" type="text/javascript">

    Ext.BLANK_IMAGE_URL="../../ext-2.0.1/resources/images/default/s.gif";

    var fieldManager;
    var filterModel;
    var localFilterResolver;
    var grid;
    var win;

    Ext.onReady(function(){

      var filterCfg=[
        {id: 'company',label: 'Company'},
        {id: 'price',label: 'Price', type: 'float'},
        {id: 'change',label: 'Change', type: 'float'},
        {id: 'pctChange',label: '% Change', type: 'float'},
        {id: 'lastChange',label: 'Last Updated', type: 'date', format: 'd/m/Y H:i'},
        {id: 'inPortfolio',label: 'In Portfolio', availableValues: availableValuesStore, remoteStore: false}
      ];

      //FilterModel
      fieldManager=new Ext.ux.netbox.core.FieldManager(filterCfg);
      filterModel=new Ext.ux.netbox.core.FilterModel(fieldManager);
      localFilterResolver=new Ext.ux.netbox.core.LocalStoreFilterResolver(filterModel);

      //--------------------------------------------------------------------------------------
      // QuickFilter
      var quickFilter= new Ext.ux.netbox.core.QuickFilterModelView({
        filterModel: filterModel
      });

      quickFilter.on("filterChanged",filterTable);

      var myMenu= new Ext.menu.Menu(
        {items:[quickFilter.getFilterMenu(),quickFilter.getRemoveFilterMenu()]}
      );

      var contextMenuManager=new Ext.ux.netbox.ContextMenuManager({menu: myMenu});
      //--------------------------------------------------------------------------------------

      // create the Grid
      grid = new Ext.grid.GridPanel({
        store: store,
        columns: [
          {id:'company',header: "Company", width: 160, sortable: true, dataIndex: 'company'},
          {header: "Price", width: 75, sortable: true, renderer: 'usMoney', dataIndex: 'price'},
          {header: "Change", width: 75, sortable: true, renderer: change, dataIndex: 'change'},
          {header: "% Change", width: 75, sortable: true, renderer: pctChange, dataIndex: 'pctChange'},
          {header: "Last Updated", width: 95, sortable: true, renderer: Ext.util.Format.dateRenderer('d/m/Y H:i'), dataIndex: 'lastChange'},
          {header: "In Portfolio", width: 85, sortable: true, renderer: inPortfolio, dataIndex: 'inPortfolio'}
        ],
        stripeRows: true,
        plugins: [new Ext.ux.netbox.core.FilterHeaderPlugin(filterModel),contextMenuManager],
        autoExpandColumn: 'company',
        region: "center",
        tbar: [{
           text: 'Filters...',
           handler: function(){
             win.show();
           }
        }]
      });

      var button2=new Ext.Button({text: "Apply"});

      button2.on("click",filterTable);
      var viewport = new Ext.Viewport(
          {layout: "border",
           items: [
             grid
           ]
          }
      );

      win = new Ext.Window({
            title: 'Filters',
            width:600,
            height:350,
            layout: 'border',
            closeAction: 'hide',
            items: [{ filterModel: filterModel,
               region: "center",
               xtype: 'dynamicFilter',
               buttons: [button2]
             }
           ]
        });

      //--------------------------------------------------------------------------------------
      // Preference Manager
      prefManager=new Ext.ux.netbox.PreferenceManager({
        id: 'prefManagerId',
        userName: 'user',
        getFn: provaGetFunc,
        setFn: provaSetFunc,
        fnScope: this,
        getAllPrefURL:'http://getAllPrefURL',
        applyDefaultPrefURL:'http://applyDefaultPrefURL',
        loadPrefURL:'http://loadPrefURL',
        savePrefURL:'http://savePrefURL',
        deletePrefURL:'http://deletePrefURL'
      });

      prefManagView = new Ext.ux.netbox.PreferenceManagerView({preferenceManager: prefManager});
      grid.getTopToolbar().add({text: 'Preference', menu: prefManagView});

      prefManager.applyDefaultPreference();
      //--------------------------------------------------------------------------------------
    });

    function displayFilter(){
      document.getElementById('debugInfo').innerHTML=Ext.util.JSON.encode(filterModel.getFilterObj());
    }

    function filterTable(){
     localFilterResolver.apply(store);
    }

    function provaGetFunc(){
      return({grid:grid.getState(),filter: filterModel.getFilterObj()});
    }

    function provaSetFunc(pref){
      if(pref.filter){
        filterModel.setFilterObj(pref.filter);
      }
      if(pref.grid){
        grid.getView().userResized=true;
        grid.applyState(pref.grid);
        grid.getColumnModel().setConfig(grid.getColumnModel().config);
      }
      filterTable();
    }

    </script>
</head>

<body id="mettiloQui">
</body>
</html>
