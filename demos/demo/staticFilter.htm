<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <title>Static Filter Demo</title>
  <link rel="stylesheet" type="text/css" href="../ext/resources/css/ext-all.css" />
  <link rel="stylesheet" type="text/css" href="../resources/cherryonext.css" />
  <script type="text/javascript" src="../ext/adapter/ext/ext-base.js"></script>
  <script type="text/javascript" src="../ext/ext-all.js"></script>
  <script type="text/javascript" src="../cherryonext.js"></script>
  
  <link rel="stylesheet" type="text/css" href="myStylesheet.css" />
  <script type="text/javascript" src="mydata.js"></script>

  <style TYPE="text/css">
    .filter { font-size: 11px; }
    .centerCls {vertical-align: middle;}
  </style>

  <script language="JavaScript" type="text/javascript">
    var fieldManager;
    var filterModel;
    var localFilterResolver;
    var filterObject;

    Ext.BLANK_IMAGE_URL="../ext/resources/images/default/s.gif";
    var availableValuesStore=new Ext.data.SimpleStore({fields: ['label', 'value'],
      data: [
        ["Yes","0"],
        ["No","1"],
        ["I don't remember","2"]
      ]});
    Ext.onReady(function(){
      Ext.QuickTips.init();
      var filterCfg=[
        {id: 'company',label: 'Company'},
        {id: 'price',label: 'Price', type: 'float'},
        {id: 'change',label: 'Change', type: 'float'},
        {id: 'pctChange',label: '% Change', type: 'float'},
        {id: 'lastChange',label: 'Last Updated', type: 'date', format: 'd/m/Y H:i'},
        {id: 'inPortfolio',label: 'In Portfolio', type: 'enum', availableValues: availableValuesStore, remoteStore: false}
      ];

      fieldManager=new Ext.ux.netbox.core.FieldManager(filterCfg);
      filterModel=new Ext.ux.netbox.core.FilterModel(fieldManager);
      
      localFilterResolver=new Ext.ux.netbox.core.LocalStoreFilterResolver(filterModel);
      var quickFilter= new Ext.ux.netbox.core.QuickFilterModelView({
        filterModel: filterModel,
        isStatic: true
      });
      quickFilter.on("filterChanged",filterTable);
      var contextMenuManager=new Ext.ux.netbox.ContextMenuManager({menu: {items:[quickFilter.getFilterMenu(),quickFilter.getRemoveFilterMenu()]}});
      // create the Grid
      var grid = new Ext.grid.GridPanel({
        store: store,
        columns: [
          {id:'company',header: "Company", width: 160, sortable: true, dataIndex: 'company'},
          {header: "Price", width: 75, sortable: true, renderer: 'usMoney', dataIndex: 'price'},
          {header: "Change", width: 75, sortable: true, renderer: change, dataIndex: 'change'},
          {header: "% Change", width: 75, sortable: true, renderer: pctChange, dataIndex: 'pctChange'},
          {header: "Last Updated", width: 95, sortable: true, renderer: Ext.util.Format.dateRenderer('d/m/Y H:i'), dataIndex: 'lastChange'},
          {header: "In Portfolio", width: 85, sortable: true, renderer: inPortfolio, dataIndex: 'inPortfolio'}
        ],
        stripeRows: true,
        plugins: [new Ext.ux.netbox.core.FilterHeaderPlugin(filterModel),contextMenuManager],
        autoExpandColumn: 'company',
        region: "center"
      });
      filterObject={fieldId:"company", operatorId:"STRING_STARTS_WITH", values:[{label: "A",value:"A"}]};
      filterModel.addElementaryFilter(filterObject);
      var button2=new Ext.Button({text: "Apply"});
      button2.on("click",filterTable);
      var panel = new Ext.Panel(
          {layout: "border",
          width: 800,
          height: 550,
           items: [
             { filterModel: filterModel,
               colsNumber:2,
               labelWidth: 55,
               labelAlign: 'top',
               rowSize: 46,
               ratio: 28,
               labelPad: 1,
               region: "north",
               height:190,
               xtype: 'staticFilter',
               itemCls: 'filter',
               buttons: [button2]
             },
             grid
           ]
          }
        );
        panel.render("mettiloQui");
    });

    function filterTable(){
     store.filterBy(localFilterResolver.filter,localFilterResolver);
    }

    </script>
</head>
<body>
<h1> Static Filter </h1>
<p> In this demo you can add or remove filters on the table using the form above the table and then pushing the Apply button. 
You can also right click on the table and filter using quick filter.</p>
<div id="mettiloQui"></div>
</body>
</html>
