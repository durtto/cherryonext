<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>JsUnit FieldManager Tests</title>
    <link rel="stylesheet" type="text/css" href="jsunit/css/jsUnitStyle.css">
    <link rel="stylesheet" type="text/css" href="../../ext-2.0.1/resources/css/ext-all.css" />
    <script type="text/javascript" src="../../ext-2.0.1/adapter/ext/ext-base.js"></script>
    <script type="text/javascript" src="../../ext-2.0.1/ext-all-debug.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/FilterEditor.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/core/Operator.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/core/Field.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/core/FieldManager.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/string/TextFieldOperator.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/string/StringField.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/string/StringListOperator.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/number/NumberField.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/number/NumberOperators.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/date/DateField.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/date/DateOperators.js"></script>
    <script language="JavaScript" type="text/javascript" src="jsunit/app/jsUnitCore.js"></script>
    <script language="JavaScript" type="text/javascript">

    var fieldManager;
    var field;
    var fieldSaved;
    var operator;
    var stringResult="";

    function onAddField(field){
        stringResult="fieldAdded";
    }

    function onRemoveField(field){
        stringResult="fieldRemoved";
    }


    function testAddField(){
        fieldManager.on("fieldAdded",onAddField);
        fieldManager.addField(field);
        assertEquals("testAddField evento chiamato correttamente","fieldAdded",stringResult);
    }

    function testConstructorWithParameter(){
      var availableValuesStore=new Ext.data.SimpleStore({fields: ['value', 'label'],
      data: [
        ["a","0"],
        ["b","1"],
        ["c","2"]
      ]});
      fieldManager=new Ext.ux.netbox.core.FieldManager([
        {id: 'test0',label: 'test0'},
        {id: 'test1',label: 'test1', type: 'string'},
        {id: 'test2',label: 'test2', type: 'float'},
        {id: 'test3',label: 'test3', type: 'int'},
        {id: 'test4',label: 'test4', type: 'date', format: 'd/m/Y H:i'},
        {id: 'test5',label: 'test5', availableValues: availableValuesStore, remoteStore: false}
      ]);
      assertEquals("There are 6 fields",6,fieldManager.getAllFields().length);
      var field=fieldManager.getFieldById('test0');
      assertTrue("test0 field is an Ext.ux.netbox.string.StringField",field instanceof Ext.ux.netbox.string.StringField);
      var field=fieldManager.getFieldById('test1');
      assertTrue("test1 field is an Ext.ux.netbox.string.StringField",field instanceof Ext.ux.netbox.string.StringField);
      var field=fieldManager.getFieldById('test2');
      assertTrue("test2 field is an Ext.ux.netbox.string.NumberField",field instanceof Ext.ux.netbox.number.NumberField);
      var field=fieldManager.getFieldById('test3');
      assertTrue("test3 field is an Ext.ux.netbox.string.NumberField",field instanceof Ext.ux.netbox.number.NumberField);
      var field=fieldManager.getFieldById('test4');
      assertTrue("test3 field is an Ext.ux.netbox.date.DateField",field instanceof Ext.ux.netbox.date.DateField);
      assertEquals("test4 has the right format",'d/m/Y H:i',field.getAvailableOperatorById('DATE_EQUAL').getFormat());
      var field=fieldManager.getFieldById('test5');
      assertTrue("test5 field is an Ext.ux.netbox.string.StringField",field instanceof Ext.ux.netbox.string.StringField);
      assertNotNull("test5 has the STRING_LIST operation",field.getAvailableOperatorById("STRING_LIST"));
      assertNotNull("test5 has the STRING_NOT_LIST operation",field.getAvailableOperatorById("STRING_NOT_IN_LIST"));
      assertObjectEquals("test5 has the right store",availableValuesStore,field.getAvailableValues());
      assertFalse("test5 has the right remoteStore",field.isStoreRemote());
    }

    function test_GetAllFields(){
      fieldManager.addField(field);
      var field1=new Ext.ux.netbox.core.Field("field1");
      field1.addOperator(new Ext.ux.netbox.core.Operator("operator1"));
      fieldManager.addField(field1);
      assertEquals("There are 2 fields",2,fieldManager.getAllFields().length);
      var fields=fieldManager.getAllFields();
      var fieldFound=false;
      var field1Found=false;
      for(var i=0;i<2;i++){
        if(fields[i].getId()==='field'){
          fieldFound=true;
        }
        if(fields[i].getId()==='field1'){
          field1Found=true;
        }
      }
      assertTrue("Field with id 'field' is there",fieldFound);
      assertTrue("Field with id 'field1' is there",field1Found);
    }

    function testRemoveField(){
        fieldManager.addField(field);
        fieldManager.on("fieldRemoved",onRemoveField);
        fieldManager.removeField(field);
        assertEquals("testRemoveField evento chiamato correttamente","fieldRemoved",stringResult);
    }

    function testGetFieldById(){
        fieldManager.addField(field);
        assertEquals("testGetFieldById",fieldManager.getFieldById("field"),field);
        assertEquals("testGetFieldById",fieldManager.getFieldById("fieldNew"),null);
    }

    function setUp(){
      fieldManager=new Ext.ux.netbox.core.FieldManager();
      field=new Ext.ux.netbox.core.Field("field");
      operator=new Ext.ux.netbox.core.Operator("operator");
      field.addOperator(operator);
      field.setDefaultOperator(operator);
    }

    function tearDown(){
      fieldManager=null;
      field=null;
      operator=null;
    }

    </script>
  </head>

<body>
<h1>JsUnit FieldManager Tests</h1>

<p>This page contains tests for the JsUnit Framework. To see them, take a look at the source.</p>
</body>
</html>
