<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>JsUnit FieldManager Tests</title>
    <link rel="stylesheet" type="text/css" href="jsunit/css/jsUnitStyle.css">
    <link rel="stylesheet" type="text/css" href="../ext/resources/css/ext-all.css" />
    <script type="text/javascript" src="../ext/adapter/ext/ext-base.js"></script>
    <script type="text/javascript" src="../ext/ext-all-debug.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/core/Operator.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/core/Field.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/core/Filter.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/core/ElementaryFilter.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/core/CompositeFilter.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/core/FieldManager.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/core/FilterModel.js"></script>
    <script language="JavaScript" type="text/javascript" src="../src/netbox/core/DynamicFilterModelView.js"></script>
    <script language="JavaScript" type="text/javascript" src="jsunit/app/jsUnitCore.js"></script>
    <script language="JavaScript" type="text/javascript">
    Ext.BLANK_IMAGE_URL="../ext/resources/images/default/s.gif";
    var fieldManager;
    var filterModelView;
    var field;
    var field2;
    var operator;
    var operator2;
    var filterModel;

    function testFieldAdd(){
      field2=new Ext.ux.netbox.core.Field("field2");
      operator2=new Ext.ux.netbox.core.Operator("operator2");
      field2.addOperator(operator2);
      field2.setDefaultOperator(operator2);
      fieldManager.addField(field2);
      assertEquals("testFieldAdd",2,filterModelView.fieldStore.getCount());
    }

    function testFieldRemove(){
      fieldManager.removeField(field);
      assertEquals("testFieldRemove",0,filterModelView.fieldStore.getCount());
    }

    function testAddElementaryFilter(){
      filterModel.addElementaryFilterByFieldId("field");
      assertEquals("testAddElementaryFilter",1,filterModelView.filterStore.getCount());
    }

    function testRemoveElementaryFilter(){
      elementaryFilterID=filterModel.addElementaryFilterByFieldId("field");
      filterModel.removeElementaryFilterById(elementaryFilterID);
      assertEquals("testRemoveElementaryFilter",0,filterModelView.filterStore.getCount());
    }

    function testChangeElementaryFilter(){
      filterModel.setFilterObj({fieldId:"field",operatorId: "operator",values:[{value: "-0.5",label: "-0.5"},{value: "1.45",label: "1.45"}]});
      assertEquals("testChangeElementaryFilter",1,filterModelView.filterStore.getCount());
    }

    function testUpdateElementaryFilterOperator(){
      elementaryFilterID=filterModel.addElementaryFilterByFieldId("field");
      operator3=new Ext.ux.netbox.core.Operator("operator3");
      field.addOperator(operator3);
      filterModel.getElementaryFilterById(elementaryFilterID).setOperator("operator3");
      record=filterModelView.filterStore.getById(elementaryFilterID);
      assertEquals("testUpdateElementaryFilterOperator","operator3",record.get("operatorId"));
    }
    
    function testUpdateElementaryFilterValues(){
      elementaryFilterID=filterModel.addElementaryFilterByFieldId("field");
      operator3=new Ext.ux.netbox.core.Operator("operator3");
      field.addOperator(operator3);
      filterModel.getElementaryFilterById(elementaryFilterID).setValues([{label:"label",value:"value"}]);
      record=filterModelView.filterStore.getById(elementaryFilterID);
      assertEquals("testUpdateElementaryFilterValues label","label",record.get('value')[0].label);
      assertEquals("testUpdateElementaryFilterValues value","value",record.get('value')[0].value);
    }

    function setUp(){
      fieldManager=new Ext.ux.netbox.core.FieldManager();
      filterModel=new Ext.ux.netbox.core.FilterModel(fieldManager);
      field=new Ext.ux.netbox.core.Field("field","label");
      operator=new Ext.ux.netbox.core.Operator("operator");
      field.addOperator(operator);
      field.setDefaultOperator(operator);
      fieldManager.addField(field);

    	filterModelView=new Ext.ux.netbox.core.DynamicFilterModelView({filterModel: filterModel});
    	filterModelView.render("mettiloQui");
    }

    function tearDown(){
      fieldManager=null;
      field=null;
      operator=null;
      operator1=null;
      filterModel=null;
      filterModelView=null;
    }

    </script>
</head>

<body>
<h1>JsUnit FieldManager Tests</h1>

<p>This page contains tests for the JsUnit Framework. To see them, take a look at the source.</p>

<div id="mettiloQui"></div>

</body>
</html>
