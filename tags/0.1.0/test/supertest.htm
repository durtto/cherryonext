<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>supertest</title>
    <link rel="stylesheet" type="text/css" href="../../ext-2.0.1/resources/css/ext-all.css" />
    <link rel="stylesheet" type="text/css" href="../resources/cherryonext.css" />
    <script type="text/javascript" src="../../ext-2.0.1/source/core/Ext.js"></script>
    <script type="text/javascript" src="../../ext-2.0.1/source/adapter/ext-base.js"></script>
    <script type="text/javascript" src="../../ext-2.0.1/ext-all-debug.js"></script>

    <script type="text/javascript" src="../cherryonext-debug.js"></script>
    
<!-- <script language="JavaScript" type="text/javascript" src="../src/netbox/locale/filters-lang-it.js"></script> -->
    
    <script language="JavaScript" type="text/javascript">

    var fieldManager;
    var field;
    var operator;
    var filterModel;
    var filterObject;
    var filterObject2;
    var complexExprObject;
    var filterManagerView;
    Ext.BLANK_IMAGE_URL="/alarmbrowser_dev/ext-2.0.1/resources/images/default/s.gif";

  
    Ext.onReady(function(){

      fieldManager=new Ext.ux.netbox.core.FieldManager();
      filterModel=new Ext.ux.netbox.core.FilterModel(fieldManager);
      field=new Ext.ux.netbox.number.NumberField("field","label");
      var field2=new Ext.ux.netbox.string.StringField("field2","label2");
      field2.addOperator(new Ext.ux.netbox.string.StringListOperator("STRING_LIST","valori possibili"));
      var field3=new Ext.ux.netbox.string.StringField("field3","label3");
      fieldManager.addField(new Ext.ux.netbox.date.DateField('field4','data','d/m/Y H:i'));
      var columnInfo=Ext.data.Record.create([
        {name: 'label'},
        {name: 'value'}
      ]);
      var ds = new Ext.data.Store({
                // load using script tags for cross domain, if the data in on the same domain as
                // this page, an HttpProxy would be better
                proxy: new Ext.data.HttpProxy({
                    url: "prova.js",
                    method: "GET"
                }),

                // create reader that reads the Topic records
                reader: new Ext.data.JsonReader({
                    root: 'records'
                }, columnInfo ),

                // turn on remote sorting
                remoteSort: true
            });
    
      field2.setAvailableValues(ds);
      var availableValuesStore=new Ext.data.SimpleStore({fields: ['value', 'label'], 
      data: [
        ["valore1","label1"],
        ["valore2","label2"],
        ["valore3","label3"],
        ["valore4","label4"],
        ["valore5","label5"],
        ["valore6","label6"]
      ]});
      field3.setAvailableValues(availableValuesStore);
      field3.setStoreRemote(false);
      fieldManager.addField(field);
      fieldManager.addField(field2);
      fieldManager.addField(field3);
    	//filterObject={id:"field", operator:"operator", values:[]};
    	//complexExprObject={left:filterObject,connector:Ext.ux.netbox.core.ComplexExpression.AND,right:filterObject};

    	//filterModel.addFilter(filterObject);
      var button=new Ext.Button({text: "Clicca per vedere il filtro"});
      button.on("click",displayFilter);

    	filterManagerView=new Ext.ux.netbox.core.DynamicFilterModelView({filterModel: filterModel,region: "center"});
        var viewport = new Ext.Viewport(
          {layout: "border",
           items: [
             filterManagerView,
             {title: "Debug",
              html: "<div id='debugInfo'>Pigia il pulsante per far comparire qui il filtro attuale</div>",
              collapsible: true,
              border:false,
              region: 'south',
              buttons: [button],
              split: true
             }
           ]
          }
        );

      prefManager=new Ext.ux.netbox.PreferenceManager({
        id: 'prefManagerId',
        userName: 'ciccio',
        getFn: provaGetFunc,
        setFn: provaSetFunc,
        fnScope: this,
        getAllPrefURL:'http://sd1h4v0.sodalia.it:8088/alarmbrowser_dev/filters/test/getAllPref.php',
        applyDefaultPrefURL:'http://sd1h4v0.sodalia.it:8088/alarmbrowser_dev/filters/test/applyDefaultPrefURL.php',
        loadPrefURL:'http://sd1h4v0.sodalia.it:8088/alarmbrowser_dev/filters/test/loadPrefURL.php',
        savePrefURL:'http://sd1h4v0.sodalia.it:8088/alarmbrowser_dev/filters/test/savePrefURL.php',
        deletePrefURL:'http://sd1h4v0.sodalia.it:8088/alarmbrowser_dev/filters/test/deletePrefURL.php'
      });

      prefManagView = new Ext.ux.netbox.PreferenceManagerView({preferenceManager: prefManager});
      filterManagerView.getTopToolbar().add({text: 'Preferenze', menu: prefManagView});
      
      prefManager.applyDefaultPreference();

    });
    
    function displayFilter(){
      document.getElementById('debugInfo').innerHTML=Ext.util.JSON.encode(filterModel.getFilter());
    }

    function provaGetFunc(){
      alert('provaGetFunc');
    }

    function provaSetFunc(pref){
      filterModel.setFilterObj(pref);
    }

    </script>
</head>

<body id="mettiloQui">
</body>
</html>
